version: "3.8"

services:
  # User Service (NestJS)
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - CB_FAILURE_THRESHOLD=2
      - CB_RESET_TIMEOUT_MS=5000
      - CB_HALF_OPEN_TEST_COUNT=1
      - RETRY_ATTEMPTS=3
      - RETRY_INITIAL_DELAY_MS=100
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Product Service (Go)
  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "3001:3001"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3001/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Remediator
  remediator:
    build: ./remediator
    container_name: remediator
    ports:
      - "7070:7070"
    networks:
      - app-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--timeout=1",
          "http://localhost:9090/-/ready",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  # Alertmanager (NEW)
  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    networks:
      - app-network
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml

  # Grafana
  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    ports:
      - "3002:3000"
    networks:
      - app-network
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--timeout=1",
          "http://localhost:3000/api/health",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  grafana-data:

networks:
  app-network:
    driver: bridge
